	.section	__TEXT,__text,regular,pure_instructions
	.globl	_main
	.align	4, 0x90
_main:                                  ## @main
	.cfi_startproc
## BB#0:
	pushq	%rbp
Ltmp2:
	.cfi_def_cfa_offset 16
Ltmp3:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
Ltmp4:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movabsq	$16, %rdi
	movl	$0, -4(%rbp)
	movq	$0, -16(%rbp)
	callq	_malloc
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jne	LBB0_2
## BB#1:
	movl	$1, -4(%rbp)
	jmp	LBB0_3
LBB0_2:
	leaq	-16(%rbp), %rdi
	movl	$2, %esi
	movq	-16(%rbp), %rax
	movl	$1, (%rax)
	movq	-16(%rbp), %rax
	movq	$0, 8(%rax)
	callq	_push_end
	leaq	-16(%rbp), %rdi
	movl	$3, %esi
	callq	_push_end
	leaq	-16(%rbp), %rdi
	movl	$4, %esi
	callq	_push_end
	leaq	-16(%rbp), %rdi
	movl	$0, %esi
	callq	_push_start
	movq	-16(%rbp), %rdi
	callq	_print_list
	leaq	L_.str(%rip), %rdi
	movb	$0, %al
	callq	_printf
	leaq	-16(%rbp), %rdi
	movl	%eax, -20(%rbp)         ## 4-byte Spill
	callq	_pop_start
	movq	-16(%rbp), %rdi
	callq	_print_list
	movq	-16(%rbp), %rdi
	callq	_free
	movl	$0, -4(%rbp)
LBB0_3:
	movl	-4(%rbp), %eax
	addq	$32, %rsp
	popq	%rbp
	retq
	.cfi_endproc

	.globl	_push_end
	.align	4, 0x90
_push_end:                              ## @push_end
	.cfi_startproc
## BB#0:
	pushq	%rbp
Ltmp7:
	.cfi_def_cfa_offset 16
Ltmp8:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
Ltmp9:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movl	%esi, -12(%rbp)
	movq	-8(%rbp), %rdi
	movq	(%rdi), %rdi
	movq	%rdi, -24(%rbp)
LBB1_1:                                 ## =>This Inner Loop Header: Depth=1
	movq	-24(%rbp), %rax
	cmpq	$0, 8(%rax)
	je	LBB1_3
## BB#2:                                ##   in Loop: Header=BB1_1 Depth=1
	movq	-24(%rbp), %rax
	movq	8(%rax), %rax
	movq	%rax, -24(%rbp)
	jmp	LBB1_1
LBB1_3:
	movabsq	$16, %rdi
	callq	_malloc
	movq	-24(%rbp), %rdi
	movq	%rax, 8(%rdi)
	movl	-12(%rbp), %ecx
	movq	-24(%rbp), %rax
	movq	8(%rax), %rax
	movl	%ecx, (%rax)
	movq	-24(%rbp), %rax
	movq	8(%rax), %rax
	movq	$0, 8(%rax)
	addq	$32, %rsp
	popq	%rbp
	retq
	.cfi_endproc

	.globl	_push_start
	.align	4, 0x90
_push_start:                            ## @push_start
	.cfi_startproc
## BB#0:
	pushq	%rbp
Ltmp12:
	.cfi_def_cfa_offset 16
Ltmp13:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
Ltmp14:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movabsq	$16, %rax
	movq	%rdi, -8(%rbp)
	movl	%esi, -12(%rbp)
	movq	%rax, %rdi
	callq	_malloc
	movq	%rax, -24(%rbp)
	movl	-12(%rbp), %esi
	movq	-24(%rbp), %rax
	movl	%esi, (%rax)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	movq	-24(%rbp), %rdi
	movq	%rax, 8(%rdi)
	movq	-24(%rbp), %rax
	movq	-8(%rbp), %rdi
	movq	%rax, (%rdi)
	addq	$32, %rsp
	popq	%rbp
	retq
	.cfi_endproc

	.globl	_print_list
	.align	4, 0x90
_print_list:                            ## @print_list
	.cfi_startproc
## BB#0:
	pushq	%rbp
Ltmp17:
	.cfi_def_cfa_offset 16
Ltmp18:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
Ltmp19:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, -16(%rbp)
LBB3_1:                                 ## =>This Inner Loop Header: Depth=1
	cmpq	$0, -16(%rbp)
	je	LBB3_3
## BB#2:                                ##   in Loop: Header=BB3_1 Depth=1
	leaq	L_.str1(%rip), %rdi
	movq	-16(%rbp), %rax
	movl	(%rax), %esi
	movb	$0, %al
	callq	_printf
	movq	-16(%rbp), %rdi
	movq	8(%rdi), %rdi
	movq	%rdi, -16(%rbp)
	movl	%eax, -20(%rbp)         ## 4-byte Spill
	jmp	LBB3_1
LBB3_3:
	addq	$32, %rsp
	popq	%rbp
	retq
	.cfi_endproc

	.globl	_pop_start
	.align	4, 0x90
_pop_start:                             ## @pop_start
	.cfi_startproc
## BB#0:
	pushq	%rbp
Ltmp22:
	.cfi_def_cfa_offset 16
Ltmp23:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
Ltmp24:
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movq	(%rdi), %rdi
	movq	8(%rdi), %rdi
	movq	%rdi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	(%rdi), %rdi
	callq	_free
	movq	-16(%rbp), %rdi
	movq	-8(%rbp), %rax
	movq	%rdi, (%rax)
	addq	$16, %rsp
	popq	%rbp
	retq
	.cfi_endproc

	.section	__TEXT,__cstring,cstring_literals
L_.str:                                 ## @.str
	.asciz	"Popping first item...\n"

L_.str1:                                ## @.str1
	.asciz	"Value is %d\n"


.subsections_via_symbols
